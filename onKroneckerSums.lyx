#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
On Kronecker Sums
\end_layout

\begin_layout Author
Zouhair Mahboubi
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
The goal of this short note is to outline how a special case of Kronecker
 sums can be computed efficiently.
 In our application, the joint transition rate matrix 
\begin_inset Formula $Q$
\end_inset

 can be expressed as a Kronecker sum of basic transition matrices.
 Particularly, by using a compact representation of the state and action
 space, we can eventually show that for any action 
\begin_inset Formula $a\in\mathcal{A}$
\end_inset

 the associated transition matrix takes the form: 
\begin_inset Formula 
\[
Q=A\oplus\underbrace{B\oplus B\dots\oplus B}_{K}
\]

\end_inset


\end_layout

\begin_layout Standard
In our problem 
\begin_inset Formula $A,B\in M_{n\times n}$
\end_inset

 are sparse matrices with 
\begin_inset Formula $n\approx30$
\end_inset

.
 Computing 
\begin_inset Formula $Q$
\end_inset

 for values of 
\begin_inset Formula $K+1<5$
\end_inset

 is tractable on a personal computer, but for values of 
\begin_inset Formula $K+1\geq5$
\end_inset

 we run into memory constraints.
 However, since 
\begin_inset Formula $Q$
\end_inset

 is ultimately used in a value iteration algorithm, where only one row at
 a time is needed, we investigate how the 
\begin_inset Formula $i^{th}$
\end_inset

 row of 
\begin_inset Formula $Q$
\end_inset

 can be computed efficiently.
 
\end_layout

\begin_layout Section
Definitions and Notation
\end_layout

\begin_layout Standard
In this section, we introduce the notation that we use and define different
 symbols and operators.
 We then outline how the Kronecker sum of a repeated matrix can be represented
 in a compact form.
\end_layout

\begin_layout Subsection
Dimensions and Special matrices
\end_layout

\begin_layout Itemize
We will denote a matrix 
\begin_inset Formula $A$
\end_inset

 of dimensions 
\begin_inset Formula $m\times n$
\end_inset

 as 
\begin_inset Formula $A\in M_{m\times n}$
\end_inset

 or
\begin_inset Formula $A_{m\times n}$
\end_inset

.
 
\end_layout

\begin_deeper
\begin_layout Itemize
We will omit dimensions of matrices when they are obvious 
\end_layout

\end_deeper
\begin_layout Itemize
If the matrix is square, we will drop one dimension and write 
\begin_inset Formula $A_{n}\in M_{n}$
\end_inset

.
\end_layout

\begin_layout Itemize
The identity matrix of dimensions 
\begin_inset Formula $n\times n$
\end_inset

 will be denoted by 
\begin_inset Formula $I_{n}$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $e_{i}$
\end_inset

 is a versor of Cartesian coordinates with entries 
\begin_inset Formula $e_{i}(k)=\delta_{ik}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $E_{m\times n}^{i,j}$
\end_inset

 will denote the sparse 
\begin_inset Formula $m\times n$
\end_inset

 matrix whose entries are defined by 
\begin_inset Formula $E^{i,j}(k,l)=e_{i}e_{j}^{\intercal}=\delta_{ki}\delta_{lj}$
\end_inset

 (i.e.
 everything is 
\begin_inset Formula $0$
\end_inset

 except the 
\begin_inset Formula $(i,j)$
\end_inset

 entry)
\end_layout

\begin_layout Subsection
Kronecker Product
\end_layout

\begin_layout Standard
Kronecker product between two matrices 
\begin_inset Formula $X\in M_{m\times n},Y\in M_{p\times q}$
\end_inset

 is written as 
\begin_inset Formula $X\otimes Y\in M_{mp\times nq}$
\end_inset

.
 Definition can be found in any matrix analysis textbook.
 Some of the Kronecker product properties we will use later:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
X\otimes(Y\otimes Z) & = & (X\otimes Y)\otimes Z\\
X\otimes(Y+Z) & = & X\otimes Y+X\otimes Z\\
I_{n}\otimes I_{m} & = & I_{nm}
\end{eqnarray*}

\end_inset

Note that in general the Kronecker product is not commutative, i.e.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
X\otimes Y\neq Y\otimes X
\]

\end_inset

However, the product is permutation equivalent, and it can be shown that:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
X_{m\times n}\otimes Y_{p\times q}=P_{(m,p)}\left(Y\otimes X\right)P_{(n,p)}^{\intercal}
\end{equation}

\end_inset

Where 
\begin_inset Formula $P_{(m,p)}\in M_{mp}$
\end_inset

 is known as the 
\emph on
perfect shuffle permutation
\emph default
:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
P_{(m,p)}=\sum_{i=1}^{m}\sum_{j=1}^{p}\left(E_{m\times p}^{i,j}\otimes(E_{m\times p}^{i,j})^{\intercal}\right)\label{eq:Pmp}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We note one particular case which we will use subsequently, 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{(1,m)}=P_{(m,1)}=I_{m}
\]

\end_inset


\end_layout

\begin_layout Subsection
Kronecker Sum
\end_layout

\begin_layout Standard
The Kronecker sum is defined for square matrices only and is defined as
 follows: 
\begin_inset Formula 
\[
X_{n}\oplus Y_{m}=X_{n}\otimes I_{m}+I_{n}\otimes Y_{m}\in M_{nm\times nm}
\]

\end_inset

The Kronecker sum is also non-commutative.
 However, we will show in this section how the special case of 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $C=\underbrace{B\oplus B\dots\oplus B}_{K}$
\end_inset

 can be simplified:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
B_{n}\oplus B_{n} & = & B_{n}\otimes I_{n}+I_{n}\otimes B_{n}\\
 & = & I_{n}\otimes B_{n}+P_{(n,n)}\left(I_{n}\otimes B_{n}\right)P_{(n,n)}^{\intercal}
\end{eqnarray*}

\end_inset

Likewise, 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
B_{n}\oplus B_{n}\oplus B_{n} & = & B_{n}\oplus\left(B_{n}\otimes I_{n}+I_{n}\otimes B_{n}\right)\\
 & = & B_{n}\otimes I_{n^{2}}+I_{n}\otimes\left(B_{n}\otimes I_{n}+I_{n}\otimes B_{n}\right)\\
 & = & B_{n}\otimes I_{n^{2}}+\left(I_{n}\otimes B_{n}\right)\otimes I_{n}+I_{n^{2}}\otimes B_{n}\\
 & = & I_{n^{2}}\otimes B_{n}+P_{(n^{2},n)}\left(I_{n^{2}}\otimes B_{n}\right)P_{(n^{2},n)}^{\intercal}+P_{(n,n^{2})}\left(I_{n^{2}}\otimes B_{n}\right)P_{(n,n^{2})}^{\intercal}
\end{eqnarray*}

\end_inset

One last time...
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
B_{n}\oplus B_{n}\oplus B_{n}\oplus B_{n} & = & B_{n}\oplus\left(B_{n}\otimes I_{n^{2}}+\left(I_{n}\otimes B_{n}\right)\otimes I_{n}+I_{n^{2}}\otimes B_{n}\right)\\
 & = & B_{n}\otimes I_{n^{3}}+I_{n}\otimes\left(B_{n}\otimes I_{n^{2}}+\left(I_{n}\otimes B_{n}\right)\otimes I_{n}+I_{n^{2}}\otimes B_{n}\right)\\
 & = & B_{n}\otimes I_{n^{3}}+\left(I_{n}\otimes B_{n}\right)\otimes I_{n^{2}}+\left(I_{n^{2}}\otimes B_{n}\right)\otimes I_{n}+I_{n^{3}}\otimes B_{n}\\
 & = & +P_{(n^{4},n^{0})}\left(I_{n^{3}}\otimes B_{n}\right)P_{(n^{4},n^{0})}^{\intercal}\\
 &  & +P_{(n^{3},n^{1})}\left(I_{n^{3}}\otimes B_{n}\right)P_{(n^{3},n^{1})}^{\intercal}\\
 &  & +P_{(n^{2},n^{2})}\left(I_{n^{3}}\otimes B_{n}\right)P_{(n^{2},n^{2})}^{\intercal}\\
 &  & +P_{(n^{1},n^{3})}\left(I_{n^{3}}\otimes B_{n}\right)P_{(n^{1},n^{3})}^{\intercal}\\
\end{eqnarray*}

\end_inset

This can be generalized to 
\begin_inset Foot
status open

\begin_layout Plain Layout
Proof by induction left as an exercise to the reader :)
\end_layout

\end_inset

: 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\begin{equation}
\underbrace{B\oplus B\dots\oplus B}_{K}=\sum_{u=0}^{K-1}P_{(n^{u},n^{K-u})}\left(I_{n^{K-1}}\otimes B\right)P_{(n^{u},n^{K-u})}^{\intercal}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Computing 
\begin_inset Formula $Q_{i}$
\end_inset


\end_layout

\begin_layout Standard
In this section, we show how the 
\begin_inset Formula $i^{th}$
\end_inset

 row of 
\begin_inset Formula $Q=A\oplus\underbrace{B\oplus B\dots\oplus B}_{K}$
\end_inset

 can be computed efficiently and give a brief discussion of the required
 storage space and show how the compact representation introduced is helpful.
\end_layout

\begin_layout Subsection
Row Entry of a Kronecker product
\end_layout

\begin_layout Standard
First, we point out that the 
\begin_inset Formula $i^{th}$
\end_inset

 row of the Kronecker product 
\begin_inset Formula $Z=X_{m\times n}\otimes Y_{p\times q}$
\end_inset

 is given by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
Z_{i}=X_{a}\otimes Y_{b}\mid(b,a)=\mbox{ind2sub}((p,m),i)
\end{equation}

\end_inset

Wwhere 
\begin_inset Formula $X_{a},Y_{b}$
\end_inset

 are the 
\begin_inset Formula $a^{th}$
\end_inset

 and 
\begin_inset Formula $b^{th}$
\end_inset

 rows of 
\begin_inset Formula $X$
\end_inset

 and 
\begin_inset Formula $Y$
\end_inset

 respectively, and the ind2sub function returns the indexing tuple 
\begin_inset Formula $(b,a)$
\end_inset

 from the linear index 
\begin_inset Formula $i$
\end_inset

.
 We assume here that the implementation uses a column major ordering of
 matrices.
 If a row major ordering is used we just need to reverse the order of dimensions
 and the order of the returned tuple.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Row Entry of 
\begin_inset Formula $Q$
\end_inset


\end_layout

\begin_layout Standard
We have 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
Q_{i} & = & \left(A\oplus\underbrace{B\oplus B\dots\oplus B}_{K}\right)_{i}\\
 & = & (A\oplus C)_{i}\\
 & = & (A\otimes I_{n^{K}}+I_{n}\otimes C)_{i}\\
 & = & A_{a}\otimes e_{b}^{\intercal}+e_{a}^{\intercal}\otimes C_{b}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Where as explained before 
\begin_inset Formula $(b,a)=\mbox{ind2sub}((n^{K},n),i)$
\end_inset

.
 We also have 
\begin_inset Formula $e_{a}\in M_{n\times1}$
\end_inset

 and 
\begin_inset Formula $e_{b}\in M_{n^{K}\times1}$
\end_inset

the Cartesian coordinates versors.
 And as long as we can compute (and store) the 
\begin_inset Formula $b$
\end_inset

 row of 
\begin_inset Formula $C$
\end_inset

, it is trivial to construct the 
\begin_inset Formula $i$
\end_inset

 row of 
\begin_inset Formula $Q$
\end_inset

, and since there are only 
\begin_inset Formula $n$
\end_inset

 non-zero entries in 
\begin_inset Formula $A_{a}\otimes e_{b}^{\intercal}$
\end_inset

, summing it with
\begin_inset Formula $e_{a}^{T}\otimes C_{b}$
\end_inset

 can be done in 
\begin_inset Formula $O(n)$
\end_inset

.
\end_layout

\begin_layout Standard
Finding the 
\begin_inset Formula $b$
\end_inset

 row of 
\begin_inset Formula $C$
\end_inset

 deserves a discussion as it involves some Kronecker algebra.
 We are interested in finding:
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\begin{eqnarray*}
C_{b} & = & e_{b}^{\intercal}C=e_{b}^{\intercal}\sum_{u=0}^{K-1}P_{(n^{u},n^{K-u})}\left(I_{n^{K-1}}\otimes B\right)P_{(n^{u},n^{K-u})}^{\intercal}\\
 & = & \sum_{u=0}^{K-1}e_{b}^{\intercal}P_{(n^{u},n^{K-u})}\left(I_{n^{K-1}}\otimes B\right)P_{(n^{u},n^{K-u})}^{\intercal}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Let's explain how this can be done for a given 
\begin_inset Formula $u$
\end_inset

.
 Let 
\begin_inset Formula $n^{u}=p,n^{K-u}=q$
\end_inset

 (note that 
\begin_inset Formula $pq=n^{K}\forall u$
\end_inset

), we are interested in an efficient way to compute:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x=e_{b}^{\intercal}P_{(p,q)}\left(I_{n^{K-1}}\otimes B\right)P_{(p,q)}^{\intercal}\label{eq:xawesome}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The expression for 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $P_{(p,q)}$
\end_inset

 is given by Eq.
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Pmp"

\end_inset

, which can be rearranged as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
P_{(p,q)} & = & \sum_{i=1}^{p}\sum_{j=1}^{q}\left(E_{p\times q}^{i,j}\otimes(E_{p\times q}^{i,j})^{\intercal}\right)=\sum_{i=1}^{p}\sum_{j=1}^{q}\left(e_{i}e_{j}^{\intercal}\otimes(e_{i}e_{j}^{\intercal})^{\intercal}\right)\nonumber \\
 & = & \sum_{i=1}^{p}\sum_{j=1}^{q}\left(e_{i}e_{j}^{\intercal}\otimes e_{j}e_{i}^{\intercal}\right)=\sum_{i=1}^{p}\sum_{j=1}^{q}\left((e_{i}\otimes e_{j})(e_{j}\otimes e_{i})^{\intercal}\right)\nonumber \\
 & = & \sum_{i=1}^{p}\sum_{j=1}^{q}\left(e_{k}e_{l}^{\intercal}\right)\mid\begin{cases}
k=\mbox{sub2ind}((q,p),j,i)\\
l=\mbox{sub2ind}((p,q),i,j)
\end{cases}\label{eq:klmap}\\
 & = & \sum_{i=1}^{p}\sum_{j=1}^{q}\left(E_{n^{K}}^{k,l}\right)\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Let's now compute the first term in 
\begin_inset Formula $x$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray*}
e_{b}^{\intercal}P_{(p,q)} & = & e_{b}^{\intercal}\sum_{i=1}^{p}\sum_{j=1}^{q}\left(e_{k}e_{l}^{\intercal}\right)\\
 & = & \sum_{i=1}^{p}\sum_{j=1}^{q}e_{b}^{\intercal}e_{k}e_{l}^{\intercal}=\sum_{i=1}^{p}\sum_{j=1}^{q}\delta_{bk}e_{l}^{\intercal}\\
 & = & e_{b'}^{\intercal}|\begin{cases}
b=k=\mbox{sub2ind\ensuremath{((q,p),j,i)}}\\
b'=l=\mbox{sub2ind}((p,q),i,j)
\end{cases}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Where we can solve for 
\begin_inset Formula $b'=\mbox{sub2ind}((p,q),\mbox{reverse(ind2sub\ensuremath{((q,p),b}))...)}$
\end_inset

.
 The next step in computing 
\begin_inset Formula $x$
\end_inset

 in Eq.
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:xawesome"

\end_inset

 is to compute:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
e_{b'}^{\intercal} & \left(I_{n^{K-1}}\otimes B\right)= & e_{c}^{\intercal}\otimes B_{d}\mid(d,c)=\mbox{ind2sub}((n,n^{K-1}),b')
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Note that 
\begin_inset Formula $e_{c}^{\intercal}\in M_{1\times n^{K-1}}$
\end_inset

 and 
\begin_inset Formula $B_{d}\in M_{1\times n}$
\end_inset

 and therefore the result has size 
\begin_inset Formula $1\times n^{K}$
\end_inset

.
 Also note that this a sparse vector, with only 
\begin_inset Formula $n$
\end_inset

 entries in the 
\begin_inset Formula $[(c-1)n+1:cn]$
\end_inset

 locations, i.e.
 
\begin_inset Formula $e_{c}^{\intercal}\otimes B_{d}=[\cdots,B_{d},\cdots]$
\end_inset

 with 
\begin_inset Formula $\cdots$
\end_inset

 being zeros.
\end_layout

\begin_layout Standard
The only thing left to construct 
\begin_inset Formula $x$
\end_inset

 in Eq.
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:xawesome"

\end_inset

 is to multiply by 
\begin_inset Formula $P_{(p,q)}^{\intercal}$
\end_inset

.
 But this is just .a permutation matrix and the resulting vector has entries
 at 
\begin_inset Formula $l$
\end_inset

 that were at 
\begin_inset Formula $k$
\end_inset

, where 
\begin_inset Formula $l,k$
\end_inset

 are given by Eq.
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:klmap"

\end_inset

.
 Since 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $e_{c}^{\intercal}\otimes B_{d}$
\end_inset

 is sparse, we can just iterate over the non zero entries, and move their
 column storage accordingly, which can be done in 
\begin_inset Formula $O(n)$
\end_inset

.
 
\end_layout

\begin_layout Subsection
Space Usage and Computational Complexity
\end_layout

\begin_layout Standard
Although in our application 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are sparse matrices, we will discuss the difference of storing the entire
 
\begin_inset Formula $Q$
\end_inset

 matrix compared to computing the 
\begin_inset Formula $i^{th}$
\end_inset

 entry in terms of space usage for the general case.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
We have shown how 
\begin_inset Formula $C=B\oplus B\dots\oplus B$
\end_inset

 can be written compactly using a set of perfect shuffle matrices and the
 Kronecker product 
\begin_inset Formula $X=I_{n^{K-1}}\otimes B_{n}$
\end_inset

.
 Note that while this product has dimension 
\begin_inset Formula $n^{K}\times n^{K}$
\end_inset

 (i.e.
 
\begin_inset Formula $n^{2K}$
\end_inset

 entries), even if 
\begin_inset Formula $B$
\end_inset

 is full, 
\begin_inset Formula $X$
\end_inset

 is sparse with only 
\begin_inset Formula $n^{K-1}n^{2}=n^{K+1}$
\end_inset

 non-zero entries.
 However, only 
\begin_inset Formula $n^{2}$
\end_inset

 of those entries (the ones defined by 
\begin_inset Formula $B_{n}$
\end_inset

) are unique.
\end_layout

\begin_layout Standard
If we look back at the expression for 
\begin_inset Formula $C$
\end_inset

, the 
\begin_inset Formula $b$
\end_inset

 row is constructed by summing 
\begin_inset Formula $K$
\end_inset

 vectors, each of dimension 
\begin_inset Formula $n^{K}$
\end_inset

.
 Each one of those vectors is sparse and has at most 
\begin_inset Formula $n$
\end_inset

 entries.
 So every time we add a new vector we do at most 
\begin_inset Formula $O(n)$
\end_inset

 operations, and therefore we expect the total number of operations needed
 to construct 
\begin_inset Formula $C_{b}$
\end_inset

 to be 
\begin_inset Formula $O(Kn)$
\end_inset

.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $B$
\end_inset

 is full, we might end up with 
\begin_inset Formula $n^{K}$
\end_inset

 entries in 
\begin_inset Formula $C_{b}$
\end_inset

.
 But even without sparsity, being able to compute the 
\begin_inset Formula $n^{K}$
\end_inset

 entries on the fly in 
\begin_inset Formula $O(Kn)$
\end_inset

 as opposed to storing the whole 
\begin_inset Formula $n^{2k}$
\end_inset

 entries is worthwhile.
 Indeed, with 
\begin_inset Formula $n=30,K=5$
\end_inset

, using single precision floats, it takes 
\begin_inset Formula $\approx100$
\end_inset

MB to store 
\begin_inset Formula $n^{K}$
\end_inset

 entries while it takes 
\begin_inset Formula $\approx2\times10^{6}$
\end_inset


\series bold
G
\series default
B to store 
\begin_inset Formula $n^{2K}$
\end_inset

 entries.
 Unfortunately this is still exponential, and a 
\begin_inset Formula $120$
\end_inset

GB would only allow us to handle 
\begin_inset Formula $K=7$
\end_inset

...
 But this is assuming 
\begin_inset Formula $B$
\end_inset

 is full, hopefully with a sparse
\begin_inset Formula $B$
\end_inset

 we can handle more if needed (Might spend more time later finding out the
 required storage...)
\end_layout

\end_body
\end_document
